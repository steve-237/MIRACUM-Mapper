@model List<Project>

@{
    ViewData["Title"] = "Home Page";
}
<div class="container-fluid h-100 d-flex flex-column justify-content-center align-items-center card mb-5">
    <div class="container dashboard">
        <div class="row justify-content-center align-items-center">
            <div class="col">
                <div class="form-group d-flex m-3 justify-content-center">
                    <div class="col-6 pr-1 position-relative">
                        <input type="text" id="customSearchInput" class="form-control flex-grow-1" placeholder="Search for a project...">
                        <span class="search-icon">
                            <i class="fas fa-search icon"></i>
                        </span>
                    </div>
                </div>

                <table id="elementTable" class="custom-table">
                    <thead>
                        <tr>
                            <th>Created Projects</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var element in Model)
                        {
                            <tr>
                                <td>
                                    <div class="d-flex justify-content-between align-items-center custom-div">
                                        <div class="title">
                                            <a href="#" class="text-decoration-none title"><h5>@element.Name</h5><br></a>
                                            <p class="version">Version : <span>@element.Version</span></p>
                                        </div>
                                        <div>
                                            <button type="button" class="btn edit-button" data-toggle="modal" data-placement="top" title="Edit the map" data-target="#projectModal" data-id="@element.Id" data-name="@element.Name" data-version="@element.Version" data-sources="@element.Sources" data-targets="@element.Targets">
                                                <i class="fa-solid fa-pen-to-square icon"></i>
                                            </button>
                                            @* <a href="@Url.Action("Edit", "EditController", new { id = element.Id })" class="btn" data-toggle="tooltip" title="Edit the map">
                                                <i class="fa-solid fa-pen-to-square icon"></i>
                                            </a> *@
                                            <button class="btn delete-button" data-toggle="tooltip" data-placement="top" title="Delete the map" data-id="@element.Id">
                                                <i class="fas fa-trash icon"></i>
                                            </button>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="projectModal" tabindex="-1" role="dialog" aria-labelledby="projectModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="projectModalLabel"><span>Edit Project</span></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editForm">
                    <div class="form-group">
                        <label for="editName">Name:</label>
                        <input type="text" class="form-control" id="editName" name="editName">
                    </div>
                    <div class="form-group">
                        <label for="editVersion">Version:</label>
                        <input type="text" class="form-control" id="editVersion" name="editVersion">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveButton">Save</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.js"></script>
    <script>
        $(document).ready(function () {
            // DataTables
            var table = $('#elementTable').DataTable({
                dom: 'rt<"d-flex" <"bottom col-md-3"> <"bottom col-md-3 m-2"l><"bottom col-md-2"i><"bottom col-md-3"p>><"clear">',
                paging: true,
                responsive: true,
                lengthMenu: [3, 4, 10, 25, 50],
                pageLength: 3,
                searching: true,
                pagingType: "full",
                language: {
                    "paginate": {
                        "first": '<i class="fas fa-angle-double-left"></i>',
                        "previous": '<i class="fas fa-angle-left"></i>',
                        "next": '<i class="fas fa-angle-right"></i>',
                        "last": '<i class="fas fa-angle-double-right"></i>',
                        "page": "_PAGE_"
                    },
                    "lengthMenu": "Items per page : _MENU_",
                    "info": "_START_ - _END_ of _TOTAL_",
                    "emptyTable": "No data available in the table",
                    "infoEmpty": "0 - 0 of 0",
                    "infoFiltered": ""
                }
            });

            // Customised DataTables search
            $("#customSearchButton").on("click", function () {
                var searchText = $("#customSearchInput").val().toLowerCase();
                table.search(searchText).draw();
            });

            // Update the search each time you enter data to trigger it in real time
            $("#customSearchInput").on("input", function () {
                var searchText = $(this).val().toLowerCase();
                table.search(searchText).draw();
            });

            $('#elementTable').on('click', '.delete-button', function () {
                var elementId = $(this).data('id');
                var rowToDelete = $('#elementTable').DataTable().row($(this).closest('tr')); // Select the parent line of this button

                $.ajax({
                    url: 'Home/Delete/' + elementId, // API URL
                    type: 'DELETE',
                    success: function (data) {
                        console.log(data);
                        if (data.success) {
                            // Delete the line in DataTables
                            rowToDelete.remove().draw();
                            console.log('Element successfully deleted.');
                        } else {
                            console.error('Element not found or deletion failed.');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error deleting element: ' + error);
                    }
                });
            });

            $('.edit-button').on('click', function () {
                var projectId = $(this).data('id');
                var projectName = $(this).data('name');
                var projectVersion = $(this).data('version');

                $('#editName').val(projectName);
                $('#editVersion').val(projectVersion);
            });

            $('#saveButton').on('click', function (data) {
                var projectId = $(this).data('id')
                var editedName = $('#editName').val();
                var editedVersion = $('#editVersion').val();

                var updatedData = {
                    id: projectId, 
                    name: editedName,
                    version: editedVersion
                };

                $.ajax({
                    url: '/Home/Edit/' + updatedData,
                    type: 'POST',
                    data: JSON.stringify(updatedData),
                    contentType: 'application/json',
                    success: function (data) {
                        console.log('Data updated successfully.', data);
                        $('#projectModal').modal('hide'); //close the modal after saving
                    },
                    error: function (xhr, status, error) {
                        console.error('Error updating data: ' + error);
                    }
                });
            });
        });
    </script>
}